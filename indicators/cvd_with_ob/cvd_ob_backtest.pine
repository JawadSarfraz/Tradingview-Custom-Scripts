//@version=6
indicator("CVD-OB Basic Backtest [Strategy]", overlay=true)

// =================== Input Parameters ===================
// Strategy Parameters
var float initial_capital = 10000.0
var float position_size = 100.0

// CVD Parameters
cvd_length = input.int(20, "CVD Length", minval=1, maxval=100)

// Risk Management
tp_mult = input.float(2.0, "Take Profit Multiple", minval=0.5, step=0.1)
sl_mult = input.float(1.0, "Stop Loss Multiple", minval=0.1, step=0.1)
max_pos_hold = input.int(20, "Maximum Position Hold Bars", minval=1)

// =================== CVD Calculations ===================
// Basic CVD using volume and price movement
cvd = ta.cum(volume * (close - open))
cvd_sma = ta.sma(cvd, cvd_length)
cvd_momentum = cvd - cvd_sma

// =================== Order Block Detection ===================
atr = ta.atr(14)
candle_size = high - low
is_significant_candle = candle_size > (atr * 1.2)

// Bullish Order Block: Strong bullish candle followed by downward movement
bullish_ob = is_significant_candle and close > open and high[1] > high[2] and low[1] < low
bullish_ob_price = high[1]

// Bearish Order Block: Strong bearish candle followed by upward movement
bearish_ob = is_significant_candle and close < open and low[1] < low[2] and high[1] > high
bearish_ob_price = low[1]

// =================== Signal Generation ===================
// Bullish Signal: CVD strength near bullish order block
bullish_signal = bullish_ob and cvd_momentum > 0

// Bearish Signal: CVD weakness near bearish order block
bearish_signal = bearish_ob and cvd_momentum < 0

// =================== Position Management ===================
var float entry_price = na
var int bars_held = 0
var float risk_amount = na
var int position_size = 0  // 1 for long, -1 for short, 0 for no position

// Update bars held counter
if position_size != 0
    bars_held := bars_held + 1
else
    bars_held := 0

// Calculate stop loss and take profit levels
long_sl = position_size > 0 ? entry_price * (1 - sl_mult/100) : na
long_tp = position_size > 0 ? entry_price * (1 + tp_mult/100) : na
short_sl = position_size < 0 ? entry_price * (1 + sl_mult/100) : na
short_tp = position_size < 0 ? entry_price * (1 - tp_mult/100) : na

// =================== Trade Management ===================
var int total_trades = 0
var int winning_trades = 0
var float max_drawdown = 0.0
var float peak_balance = 0.0
var float current_balance = initial_capital
var float current_profit = 0.0

// Entry Logic
if bullish_signal and position_size == 0
    entry_price := close
    risk_amount := atr
    position_size := 1
    total_trades := total_trades + 1

if bearish_signal and position_size == 0
    entry_price := close
    risk_amount := atr
    position_size := -1
    total_trades := total_trades + 1

// Exit Logic
exit_long = position_size > 0 and (
    close <= long_sl or 
    close >= long_tp or 
    bars_held >= max_pos_hold)

exit_short = position_size < 0 and (
    close >= short_sl or 
    close <= short_tp or 
    bars_held >= max_pos_hold)

if exit_long or exit_short
    current_profit := position_size > 0 ? 
        (close - entry_price) / entry_price * 100 :
        (entry_price - close) / entry_price * 100
    
    current_balance := current_balance * (1 + current_profit/100)
    winning_trades := winning_trades + (current_profit > 0 ? 1 : 0)
    position_size := 0
    bars_held := 0

// Calculate running maximum drawdown
peak_balance := math.max(peak_balance, current_balance)
max_drawdown := math.max(max_drawdown, (peak_balance - current_balance) / peak_balance * 100)

// =================== Visualization ===================
// Plot signals
plotshape(bullish_signal, "Bullish Signal", shape.triangleup, location.belowbar, 
         color.new(color.green, 0), size=size.small)
plotshape(bearish_signal, "Bearish Signal", shape.triangledown, location.abovebar, 
         color.new(color.red, 0), size=size.small)

// Plot stop loss and take profit levels
plot(long_sl, "Long SL", color=color.new(color.red, 50), style=plot.style_linebr)
plot(long_tp, "Long TP", color=color.new(color.green, 50), style=plot.style_linebr)
plot(short_sl, "Short SL", color=color.new(color.red, 50), style=plot.style_linebr)
plot(short_tp, "Short TP", color=color.new(color.green, 50), style=plot.style_linebr)

// Display performance metrics
var table stats = table.new(position.top_right, 5, 4, color.black, color.white, 1, color.gray, 1)
if barstate.islast
    win_rate = total_trades > 0 ? (winning_trades / total_trades) * 100 : 0.0
    table.cell(stats, 0, 0, "Performance Metrics", bgcolor=color.blue)
    table.cell(stats, 0, 1, "Total Trades: " + str.tostring(total_trades))
    table.cell(stats, 0, 2, "Win Rate: " + str.tostring(math.round(win_rate, 2)) + "%")
    table.cell(stats, 0, 3, "Max Drawdown: " + str.tostring(math.round(max_drawdown, 2)) + "%") 