//@version=6
strategy("CVD-OB Basic Backtest", overlay=true, initial_capital=10000, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// =================== Input Parameters ===================
// CVD Parameters
cvd_length = input.int(20, "CVD Length", minval=1, maxval=100)

// Risk Management
tp_mult = input.float(2.0, "Take Profit Multiple", minval=0.5, step=0.1)
sl_mult = input.float(1.0, "Stop Loss Multiple", minval=0.1, step=0.1)
max_pos_hold = input.int(20, "Maximum Position Hold Bars", minval=1)

// =================== CVD Calculations ===================
// Basic CVD using volume and price movement
cvd = ta.cum(volume * (close - open))
cvd_sma = ta.sma(cvd, cvd_length)
cvd_momentum = cvd - cvd_sma

// =================== Order Block Detection ===================
atr = ta.atr(14)
candle_size = high - low
is_significant_candle = candle_size > (atr * 1.2)

// Bullish Order Block: Strong bullish candle followed by downward movement
bullish_ob = is_significant_candle and close > open and high[1] > high[2] and low[1] < low
bullish_ob_price = high[1]

// Bearish Order Block: Strong bearish candle followed by upward movement
bearish_ob = is_significant_candle and close < open and low[1] < low[2] and high[1] > high
bearish_ob_price = low[1]

// =================== Signal Generation ===================
// Bullish Signal: CVD strength near bullish order block
bullish_signal = bullish_ob and cvd_momentum > 0

// Bearish Signal: CVD weakness near bearish order block
bearish_signal = bearish_ob and cvd_momentum < 0

// =================== Position Management ===================
var float entry_price = na
var int bars_held = 0
var float risk_amount = na

// Update bars held counter
if strategy.position_size != 0
    bars_held := bars_held + 1
else
    bars_held := 0

// Calculate stop loss and take profit levels
long_sl = if strategy.position_size > 0
    entry_price * (1 - sl_mult/100)
else
    na

long_tp = if strategy.position_size > 0
    entry_price * (1 + tp_mult/100)
else
    na

short_sl = if strategy.position_size < 0
    entry_price * (1 + sl_mult/100)
else
    na

short_tp = if strategy.position_size < 0
    entry_price * (1 - tp_mult/100)
else
    na

// =================== Strategy Execution ===================
// Long Entry
if bullish_signal and strategy.position_size == 0
    entry_price := close
    risk_amount := atr
    strategy.entry("Long", strategy.long)

// Short Entry
if bearish_signal and strategy.position_size == 0
    entry_price := close
    risk_amount := atr
    strategy.entry("Short", strategy.short)

// Exit Conditions
// Long Exit Logic
if strategy.position_size > 0
    if bars_held >= max_pos_hold
        strategy.close("Long", comment="Max Bars Exit")
    else
        strategy.exit("Long TP/SL", "Long", limit=long_tp, stop=long_sl)

// Short Exit Logic
if strategy.position_size < 0
    if bars_held >= max_pos_hold
        strategy.close("Short", comment="Max Bars Exit")
    else
        strategy.exit("Short TP/SL", "Short", limit=short_tp, stop=short_sl)

// =================== Performance Metrics ===================
var int total_trades = 0
var int winning_trades = 0
var float max_drawdown = 0.0
var float peak_balance = 0.0

// Update metrics
if strategy.closedtrade
    total_trades := total_trades + 1
    winning_trades := winning_trades + (strategy.closedtrade.profit > 0 ? 1 : 0)

// Calculate running maximum drawdown
peak_balance := math.max(peak_balance, strategy.equity)
max_drawdown := math.max(max_drawdown, (peak_balance - strategy.equity) / peak_balance * 100)

// =================== Visualization ===================
// Plot signals
plotshape(bullish_signal, "Bullish Signal", shape.triangleup, location.belowbar, 
         color.new(color.green, 0), size=size.small)
plotshape(bearish_signal, "Bearish Signal", shape.triangledown, location.abovebar, 
         color.new(color.red, 0), size=size.small)

// Plot stop loss and take profit levels
plot(long_sl, "Long SL", color=color.new(color.red, 50), style=plot.style_linebr)
plot(long_tp, "Long TP", color=color.new(color.green, 50), style=plot.style_linebr)
plot(short_sl, "Short SL", color=color.new(color.red, 50), style=plot.style_linebr)
plot(short_tp, "Short TP", color=color.new(color.green, 50), style=plot.style_linebr)

// Display performance metrics
var table stats = table.new(position.top_right, 5, 4, color.black, color.white, 1, color.gray, 1)
if barstate.islast
    win_rate = total_trades > 0 ? (winning_trades / total_trades) * 100 : 0.0
    table.cell(stats, 0, 0, "Performance Metrics", bgcolor=color.blue)
    table.cell(stats, 0, 1, "Total Trades: " + str.tostring(total_trades))
    table.cell(stats, 0, 2, "Win Rate: " + str.tostring(math.round(win_rate, 2)) + "%")
    table.cell(stats, 0, 3, "Max Drawdown: " + str.tostring(math.round(max_drawdown, 2)) + "%") 